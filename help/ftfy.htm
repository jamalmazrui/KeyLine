<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:7.0pt;
	margin-left:.5pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-.5pt;
	line-height:103%;
	font-size:10.0pt;
	font-family:"Calibri",sans-serif;
	color:black;}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:10.45pt;
	margin-left:.5pt;
	text-indent:-.5pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:14.5pt;
	font-family:"Calibri",sans-serif;
	color:#20435C;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.9pt;
	margin-left:.5pt;
	text-indent:-.5pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Calibri",sans-serif;
	color:#20435C;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Calibri",sans-serif;
	color:#20435C;
	font-weight:bold;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Calibri",sans-serif;
	color:#20435C;
	font-weight:bold;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
 /* Page Definitions */
 @page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection1
	{page:WordSection1;}
@page WordSection2
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection2
	{page:WordSection2;}
@page WordSection3
	{size:8.5in 11.0in;
	margin:153.9pt 1.0in 39.95pt 1.0in;}
div.WordSection3
	{page:WordSection3;}
@page WordSection4
	{size:8.5in 11.0in;
	margin:36.3pt 1.0in 39.95pt 1.0in;}
div.WordSection4
	{page:WordSection4;}
@page WordSection5
	{size:8.5in 11.0in;
	margin:36.3pt 1.0in 39.95pt 1.0in;}
div.WordSection5
	{page:WordSection5;}
@page WordSection6
	{size:8.5in 11.0in;
	margin:75.2pt 1.0in 39.95pt 1.0in;}
div.WordSection6
	{page:WordSection6;}
@page WordSection7
	{size:8.5in 11.0in;
	margin:73.35pt 1.0in 39.95pt 1.0in;}
div.WordSection7
	{page:WordSection7;}
@page WordSection8
	{size:8.5in 11.0in;
	margin:74.2pt 1.0in 39.95pt 1.0in;}
div.WordSection8
	{page:WordSection8;}
@page WordSection9
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection9
	{page:WordSection9;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US>

<div class=WordSection1>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:30.4pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
width=625 height=1 id="Group 18911"
src="ftfy%20Documentation_files/image001.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:242.15pt;text-align:left;text-indent:0in;
line-height:107%'><b><span style='font-size:25.0pt;line-height:107%'>ftfy
Documentation</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:0in;
margin-bottom:132.75pt;margin-left:0in;text-align:right;text-indent:0in;
line-height:107%'><b><i><span style='font-size:17.0pt;line-height:107%'>Release
4.1</span></i></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:6.0pt;
margin-bottom:254.05pt;margin-left:0in;text-align:right;text-indent:0in;
line-height:107%'><b><span style='font-size:17.0pt;line-height:107%'>Rob Speer</span></b></p>

<p class=MsoNormal align=right style='margin:0in;text-align:right;text-indent:
0in;line-height:107%'><span style='font-size:12.0pt;line-height:107%'>February
25, 2016</span></p>

</div>

<span style='font-size:10.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection2>

<p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
0in;line-height:107%'>&nbsp;</p>

</div>

<span style='font-size:10.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection3>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'>

<table cellpadding=0 cellspacing=0>
 <tr>
  <td width=96 height=0></td>
 </tr>
 <tr>
  <td></td>
  <td><img width=625 height=1 src="ftfy%20Documentation_files/image002.gif"></td>
 </tr>
</table>

<br clear=ALL>
Contents</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:95.0pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
width=625 height=1 id="Group 19068"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Mojibake         </span>3</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Other fixes     </span>5</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Encodings ftfy can handle           </span>7</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Using ftfy        </span>9</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Non-Unicode strings     </span>13</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>A note on encoding detection    </span>15</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>7<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Accuracy         </span>17</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>8<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Command-line tool       </span>19</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>9<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Module documentation               </span>21</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>9.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><i><span style='color:#355F7C'>ftfy.fixes</span></i><span
style='color:#355F7C'>: how individual fixes are implemented </span>. . . . . .
. . . . . . . . . . . . . . . . . . . . . . . 21</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>9.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><i><span style='color:#355F7C'>ftfy.badness</span></i><span
style='color:#355F7C'>: measures the “badness” of text </span>. . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . 24</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>9.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><i><span style='color:#355F7C'>ftfy.bad_codecs</span></i><span
style='color:#355F7C'>: support some encodings Python doesn’t like      </span>.
. . . . . . . . . . . . . . . . . . . .    25</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>9.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><i><span style='color:#355F7C'>ftfy.chardata </span></i><span
style='color:#355F7C'>and <i>ftfy.build_data</i>: trivia about characters              </span>.
. . . . . . . . . . . . . . . . . . . . . . .              27</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>10<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Future versions of ftfy  </span>29</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='color:#355F7C'>Python Module Index                                                                                                                                                                     </span>31</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><b>i</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>ii</b></p>

</div>

<span style='font-size:10.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection4>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><b>ftfy
Documentation, Release 4.1</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:27.95pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
width=625 height=1 id="Group 19155"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>ftfy fixes Unicode that’s broken
in various ways. It works in Python 2.7, Python 3.2, or later.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.45pt;
margin-left:-.25pt'>The goal of ftfy is to take in bad Unicode and output good
Unicode, for use in your Unicode-aware code. This is different from taking in
non-Unicode and outputting Unicode, which is not a goal of ftfy. It also isn’t
designed to protect you from having to write Unicode-aware code. ftfy helps
those who help themselves.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:128%'>Of course
you’re better off if your input is decoded properly and has no glitches. But
you often don’t have any control over your input; it’s someone else’s mistake,
but it’s your problem now. ftfy will do everything it can to fix the problem.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
width=625 height=1 id="Group 19156"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.45pt;
margin-left:-.25pt'>Note: Time is marching on. ftfy 4.x supports Python 2.7 and
3.x, but when ftfy 5.0 is released, it will probably only support Python 3.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If you’re running on Python 2,
ftfy 4.x will keep working for you. You don’t have to upgrade to 5.0. You can
save yourself a headache by adding ftfy &lt; 5 to your requirements, making
sure you stay on version 4.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.5pt;
margin-left:-.25pt'>See <i><span style='color:#355F7C'>Future versions of ftfy </span></i>for
why this needs to happen.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:474.5pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
width=625 height=1 id="Group 19157"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>Contents</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>Contents</b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:73.4pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%'>1 Mojibake</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:51.3pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
width=625 height=1 id="Group 19373"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The most interesting kind of
brokenness that ftfy will fix is when someone has encoded Unicode with one
standard and decoded it with a different one. This often shows up as characters
that turn into nonsense sequences (called “mojibake”):</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>The
word schön might appear as schÃ¶n.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>An
em dash (--) might appear as â<s>C</s>”.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:24.9pt;text-indent:-8.45pt'><span style='line-height:103%'>•<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>Text that was meant
to be enclosed in quotation marks might end up instead enclosed in â<s>C</s>œ and
â<s>C</s>&lt;9d&gt;, where &lt;9d&gt; represents an unprintable character.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:-.25pt'>This causes your Unicode-aware code to end up with garbage
text because someone else (or maybe “someone else”) made a mistake.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.35pt;
margin-left:-.25pt'>This happens very often to real text. It’s often the fault
of software that makes it difficult to use UTF-8 correctly, such as Microsoft
Office and some programming languages. The <i><span style='color:#355F7C'>ftfy.fix_encoding()
</span></i>function will look for evidence of mojibake and, when possible, it
will undo the process that produced it to get back the text that was supposed
to be there.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:-.25pt'>Does this sound impossible? It’s really not. UTF-8 is a
well-designed encoding that makes it obvious when it’s being misused, and a
string of mojibake usually contains all the information we need to recover the
original string.</p>

<p class=MsoNormal style='margin-left:-.25pt'>When ftfy is tested on
multilingual data from Twitter, it has a false positive rate of less than 1 per
million tweets.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>Chapter
1. Mojibake</b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:73.4pt;margin-left:52.45pt;text-align:right;text-indent:0in;
line-height:110%'><b><span style='font-size:14.5pt;line-height:110%'>2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:110%'>Other
fixes</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:51.3pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
width=625 height=1 id="Group 19980"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Any given text string might have
other irritating properties, possibly even interacting with the erroneous
decoding. The main function of ftfy, <i><span style='color:#355F7C'>ftfy.fix_text()</span></i>,
will fix other problems along the way, such as:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>The
text could contain HTML entities such as &amp;amp; in place of certain
characters, when you would rather see what the characters actually are.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>For
that matter, it could contain instructions for a text terminal to do something
like change colors, but you are not sending the text to a terminal, so those
instructions are just going to look like ^[[30m; or something in the middle of
the text.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>The
text could write words in non-standard ways for display purposes, such as using
the three characters op for the word “flop”. This can happen when you copy text
out of a PDF, for example.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:3.05pt;
margin-left:24.9pt;text-indent:-8.45pt'><span style='line-height:103%'>•<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>It might not be in <i>NFC
normalized </i>form. You generally want your text to be NFC-normalized, to
avoid situations where unequal sequences of codepoints can represent exactly the
same text. You can also opt for ftfy to use the more aggressive <i>NFKC
normalization</i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
width=625 height=1 id="Group 19981"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.7pt;
margin-left:-.25pt'>Note: Before version 4.0, ftfy used NFKC normalization by
default. This covered a lot of helpful fixes at once, such as expanding
ligatures and replacing “fullwidth” characters with their standard form.
However, it also performed transformations that lose information, such as
converting ™ to TM and H2O to H2O.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The default, starting in ftfy 4.0, is to use NFC
normalization unless told to use NFKC normalization (or no normalization at
all). The more helpful parts of NFKC are implemented as separate, limited
fixes.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:16.35pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
width=625 height=1 id="Group 19982"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>There are other interesting
things that ftfy can do that aren’t part of the <i><span style='color:#355F7C'>ftfy.fix_text()
</span></i>pipeline, such as:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><i><span
style='color:#355F7C'>ftfy.explain_unicode()</span></i>: show you what’s going
on in a string, for debugging purposes</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><i><span
style='color:#355F7C'>ftfy.fixes.decode_escapes()</span></i>: do what everyone
thinks the built-in unicode_escape codec does, but this one doesn’t <i>cause </i>mojibake</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>Chapter
2. Other fixes</b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:73.4pt;margin-left:52.45pt;text-align:right;text-indent:0in;
line-height:110%'><b><span style='font-size:14.5pt;line-height:110%'>3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:110%'>Encodings
ftfy can handle</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:51.3pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
width=625 height=1 id="Group 20521"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>ftfy can’t fix all possible
mix-ups. Its goal is to cover the most common encoding mix-ups while keeping
false positives to a very low rate.</p>

<p class=MsoNormal style='margin-left:-.25pt'>ftfy can understand text that was
decoded as any of these single-byte encodings:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>Latin-1
(ISO-8859-1)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>Windows-1252
(cp1252 – used in Microsoft products)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>Windows-1251
(cp1251 – the Russian version of cp1252)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>MacRoman
(used on Mac OS 9 and earlier)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:1.1pt;
margin-left:24.9pt;text-indent:-8.45pt;line-height:149%'><span
style='line-height:149%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>cp437
(used in MS-DOS and some versions of the Windows command prompt) when it was
actually intended to be decoded as one of these variable-length encodings:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>UTF-8</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.55pt;
margin-left:24.9pt;text-indent:-8.45pt'><span style='line-height:103%'>•<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>CESU-8 (what some
people think is UTF-8)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:-.25pt'>It can also understand text that was intended as
Windows-1252 but decoded as Latin-1. That’s the very common case where things
like smart-quotes and bullets turn into single weird control characters.</p>

<p class=MsoNormal style='margin-left:-.25pt'>However, ftfy cannot understand
other mixups between single-byte encodings, because it is extremely difficult
to detect which mixup in particular is the one that happened.</p>

<p class=MsoNormal style='margin-left:-.25pt'>We also can’t handle the non-UTF
encodings used for Chinese, Japanese, and Korean, such as shift-jis and gb18030.
See <a href="https://github.com/LuminosoInsight/python-ftfy/issues/34"><span
style='color:#377063;text-decoration:none'>issue #34</span></a><span
style='color:#377063'> </span>for why this is so hard.</p>

<p class=MsoNormal style='margin-left:-.25pt'>But remember that the input to ftfy
is Unicode, so it handles actual CJK <i>text </i>just fine. It just can’t
discover that a CJK <i>encoding </i>introduced mojibake into the text.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>Chapter
3. Encodings ftfy can handle</b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:73.4pt;margin-left:52.45pt;text-align:right;text-indent:0in;
line-height:110%'><b><span style='font-size:14.5pt;line-height:110%'>4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:110%'>Using ftfy</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:51.4pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 21025"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The main function, <i><span
style='color:#355F7C'>ftfy.fix_text()</span></i>, will run text through a
sequence of fixes. If the text changed, it will run them through again, so that
you can be sure the output ends up in a standard form that will be unchanged by
<i><span style='color:#355F7C'>ftfy.fix_text()</span></i>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>All the fixes are on by default,
but you can pass options to turn them off. Check that the default fixes are
appropriate for your use case. For example:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>You
should set fix_entities to False if the output is meant to be interpreted as
HTML.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>You
should set fix_character_width to False if you want to preserve the spacing of
CJK text.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:6.7pt;
margin-left:24.9pt;text-indent:-8.45pt;line-height:102%'><span
style='line-height:102%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>You
should set uncurl_quotes to False if you want to preserve quotation marks with
nice typography. You could even consider doing quite the opposite of uncurl_quotes,
running <a href="http://pythonhosted.org/smartypants/"><span style='color:#377063;
text-decoration:none'>smartypants</span></a><span style='color:#377063'> </span>on
the result to make all the punctuation nice.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If              the          only        fix            you         need       is             to            detect    and         repair     decoding               errors (mojibake),            then        you         should    use
<i><span style='color:#355F7C'>ftfy.fix_encoding() </span></i>directly.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Changed in version 4.0: The
default normalization was changed from ’NFKC’ to ’NFC’. The new options <i>fix_latin_ligatures
</i>and <i>fix_character_width </i>were added to implement some of the less
lossy parts of NFKC normalization on top of NFC.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:24.15pt;
margin-bottom:4.6pt;margin-left:24.65pt;text-align:left;text-indent:-25.4pt;
line-height:110%'>ftfy.<b>fix_text</b>(<i>text</i>,  <i>fix_entities=’auto’</i>,               <i>remove_terminal_escapes=True</i>,       <i>fix_encoding=True</i>,
<i>fix_latin_ligatures=True</i>,     <i>fix_character_width=True</i>,  <i>uncurl_quotes=True</i>,
<i>fix_line_breaks=True</i>,    <i>fix_surrogates=True</i>,     <i>remove_control_chars=True</i>,              <i>remove_bom=True</i>,
<i>normalization=’NFC’</i>, <i>max_decode_length=1000000</i>) Given Unicode
text as input, fix inconsistencies and glitches in it, such as mojibake.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.6pt;
margin-left:25.4pt'>Let’s start with some examples:</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:233.3pt'>

<p class=MsoNormal align=left style='margin-bottom:11.5pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:110%'>(fix_text(</span><span
style='font-size:9.0pt;line-height:110%;color:#4070A1'>'uÌ^nicode'</span><span
style='font-size:9.0pt;line-height:110%'>)) </span><span style='font-size:9.0pt;
line-height:110%;color:#333333'>ünicode</span></p>

</div>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:0in'>

<p class=MsoNormal align=left style='margin-bottom:1.65pt;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:109%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:109%'>(fix_text(</span><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>'Broken text&amp;hellip;
it&amp;#x2019;s ubberic!'</span><span style='font-size:9.0pt;line-height:109%'>,</span></p>

<p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
0in;line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>...                                                  </span></b><span
style='font-size:9.0pt;line-height:110%'>normalization</span><span
style='font-size:9.0pt;line-height:110%;color:#666666'>=</span><span
style='font-size:9.0pt;line-height:110%;color:#4070A1'>'NFKC'</span><span
style='font-size:9.0pt;line-height:110%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:11.5pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>Broken text... it's flubberific!</span></p>

</div>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:41.3pt'>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:109%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:109%'>(fix_text(</span><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>'HTML entities
&amp;lt;3'</span><span style='font-size:9.0pt;line-height:109%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:11.5pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>HTML entities &lt;3</span></p>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:109%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:109%'>(fix_text(</span><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>'&lt;em&gt;HTML entities
&amp;lt;3&lt;/em&gt;'</span><span style='font-size:9.0pt;line-height:109%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:1.45pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>&lt;em&gt;HTML entities &amp;lt;3&lt;/em&gt;</span></p>

</div>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=633
 style='width:474.4pt;margin-left:-28.1pt;border-collapse:collapse'>
 <tr style='height:35.25pt'>
  <td width=633 valign=top style='width:474.4pt;border:solid black 1.0pt;
  padding:3.3pt 5.75pt 0in 28.1pt;height:35.25pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:1.75pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'><b><span style='font-size:9.0pt;line-height:107%;
  color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span style='font-size:9.0pt;
  line-height:107%;color:#007021'>print</span></b><span style='font-size:9.0pt;
  line-height:107%'>(fix_text(</span><span style='font-size:9.0pt;line-height:
  107%;color:#4070A1'>'<b>\001\033</b>[36;44mI&amp;#x92;m blue, da ba dee da ba
  '</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:101.6pt;
  margin-bottom:0in;margin-left:0in;text-align:left;text-indent:0in;line-height:
  107%'><b><span style='font-size:9.0pt;line-height:107%;color:#C75C0A'>...             </span></b><span
  style='font-size:9.0pt;line-height:107%;color:#4070A1'>'doo&amp;#133;<b>\033</b>[0m'</span><span
  style='font-size:9.0pt;line-height:107%'>, normalization</span><span
  style='font-size:9.0pt;line-height:107%;color:#666666'>=</span><span
  style='font-size:9.0pt;line-height:107%;color:#4070A1'>'NFKC'</span><span
  style='font-size:9.0pt;line-height:107%'>)) </span><span style='font-size:
  9.0pt;line-height:107%;color:#333333'>I'm blue, da ba dee da ba doo...</span></p>
  </td>
 </tr>
 <tr style='height:56.1pt'>
  <td width=633 valign=top style='width:474.4pt;border:solid black 1.0pt;
  border-top:none;padding:3.3pt 5.75pt 0in 28.1pt;height:56.1pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:80.05pt;
  margin-bottom:0in;margin-left:0in;text-align:left;text-indent:0in;line-height:
  123%'><b><span style='font-size:9.0pt;line-height:123%;color:#C75C0A'>&gt;&gt;&gt;
  </span></b><i><span style='font-size:9.0pt;line-height:123%;color:#407F8F'>#
  This example string starts with a byte-order mark, even if </span></i><b><span
  style='font-size:9.0pt;line-height:123%;color:#C75C0A'>&gt;&gt;&gt; </span></b><i><span
  style='font-size:9.0pt;line-height:123%;color:#407F8F'># you can't see it on
  the Web.</span></i></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:133.85pt;
  margin-bottom:0in;margin-left:0in;text-align:left;text-indent:0in;line-height:
  107%'><b><span style='font-size:9.0pt;line-height:107%;color:#C75C0A'>&gt;&gt;&gt;
  </span></b><b><span style='font-size:9.0pt;line-height:107%;color:#007021'>print</span></b><span
  style='font-size:9.0pt;line-height:107%'>(fix_text(</span><span
  style='font-size:9.0pt;line-height:107%;color:#4070A1'>'<b>\ufeff</b>Party
  like<b>\n</b>it&amp;rsquo;s 1999!'</span><span style='font-size:9.0pt;
  line-height:107%'>)) </span><span style='font-size:9.0pt;line-height:107%;
  color:#333333'>Party like it's 1999!</span></p>
  </td>
 </tr>
</table>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:0in;
margin-right:41.3pt'>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:110%'>(fix_text(</span><span
style='font-size:9.0pt;line-height:110%;color:#4070A1'>''</span><span
style='font-size:9.0pt;line-height:110%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:11.5pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>LOUD NOISES</span></p>

<p class=MsoNormal align=left style='margin-bottom:1.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:110%;color:#007021'>len</span><span style='font-size:9.0pt;
line-height:110%'>(fix_text(</span><span style='font-size:9.0pt;line-height:
110%;color:#4070A1'>'' </span><span style='font-size:9.0pt;line-height:110%;
color:#666666'>* </span><span style='font-size:9.0pt;line-height:110%;
color:#217F4F'>100000</span><span style='font-size:9.0pt;line-height:110%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:11.2pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>200000</span></p>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:110%;color:#007021'>len</span><span style='font-size:9.0pt;
line-height:110%'>(fix_text(</span><span style='font-size:9.0pt;line-height:
110%;color:#4070A1'>''</span><span style='font-size:9.0pt;line-height:110%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:9.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>0</span></p>

</div>

<p class=MsoNormal style='margin-left:-.25pt'>Based on the options you provide,
ftfy applies these steps in order:</p>

<p class=MsoNormal style='margin-left:21.95pt;text-indent:-3.5pt'>•If fix_entities
is True, replace HTML entities with their equivalent characters. If it’s “auto”
(the default), then consider replacing HTML entities, but don’t do so in text
where you have seen a pair of actual angle brackets (that’s probably actually
HTML and you shouldn’t mess with the entities).</p>

<p class=MsoNormal style='margin-left:21.95pt;text-indent:-3.5pt'>•If remove_terminal_escapes
is True, remove sequences of bytes that are instructions for Unix terminals,
such as the codes that make text appear in different colors.</p>

<p class=MsoNormal style='margin-left:21.95pt;text-indent:-3.5pt'>•If fix_encoding
is True, look for common mistakes that come from encoding or decoding Unicode
text incorrectly, and fix them if they are reasonably fixable. See fixes.fix_encoding
for details.</p>

<p class=MsoNormal style='margin-left:18.95pt'>•If uncurl_quotes is True,
replace various curly quotation marks with plain-ASCII straight quotes.</p>

<p class=MsoNormal style='margin-left:21.95pt;text-indent:-3.5pt'>•If fix_latin_ligatures
is True, then ligatures made of Latin letters, such as , will be separated into
individual letters. These ligatures are usually not meaningful outside of font
rendering, and often represent copy-and-paste errors.</p>

<p class=MsoNormal style='margin-left:21.95pt;text-indent:-3.5pt'>•If fix_character_width
is True, half-width and full-width characters will be replaced by their
standard-width form.</p>

<p class=MsoNormal style='margin-left:21.95pt;text-indent:-3.5pt'>•If fix_line_breaks
is true, convert all line breaks to Unix style (CRLF and CR line breaks become
LF line breaks).</p>

<p class=MsoNormal style='margin-left:21.95pt;text-indent:-3.5pt'>•If fix_surrogates
is true, ensure that there are no UTF-16 surrogates in the resulting string, by
converting them to the correct characters when they’re appropriately paired, or
replacing them with ufffd otherwise.</p>

<p class=MsoNormal style='margin-left:21.95pt;text-indent:-3.5pt'>•If fix_control_characters
is true, remove all C0 control characters except the common useful ones: TAB,
CR, LF, and FF. (CR characters may have already been removed by the fix_line_breaks
step.)</p>

<p class=MsoNormal style='margin-left:21.95pt;text-indent:-3.5pt'>•If remove_bom
is True, remove the Byte-Order Mark if it exists. (This is a decoded Unicode
string. It doesn’t have a “byte order”.)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.55pt;
margin-left:21.95pt;text-indent:-3.5pt'>•If normalization is not None, apply
the specified form of Unicode normalization, which can be one of ‘NFC’, ‘NFKC’,
‘NFD’, and ‘NFKD’.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:26.05pt;
margin-left:40.55pt;text-indent:-5.0pt'>–The default normalization, NFC,
combines characters and diacritics that are written using separate code points,
such as converting “e” plus an acute accent modifier into “é”, or converting
“ka” () plus a dakuten into the single character “ga” (). Unicode can be
converted to NFC form without any change in its meaning.</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><b>Chapter
4. Using ftfy</b></p>

</div>

<span style='font-size:10.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection5>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><b>ftfy
Documentation, Release 4.1</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:27.9pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 21878"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:65.45pt;text-indent:-5.0pt'>–If you ask for NFKC normalization, it
will apply additional normalizations that can change the meanings of
characters. For example, ellipsis characters will be replaced with three
periods, all ligatures will be replaced with the individual characters that make
them up, and characters that differ in font style will be converted to the same
character.</p>

<p class=MsoNormal style='margin-left:46.85pt;text-indent:-3.5pt'>•If anything
was changed, repeat all the steps, so that the function is idempotent.
“&amp;amp;amp;” will become “&amp;”, for example, not “&amp;amp;”.</p>

<p class=MsoNormal style='margin-left:25.4pt'>fix_text will work one line at a
time, with the possibility that some lines are in different encodings, allowing
it to fix text that has been concatenated together from different sources.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.6pt;
margin-left:25.4pt'>When it encounters lines longer than max_decode_length (1
million codepoints by default), it will not run the fix_encoding step, to avoid
unbounded slowdowns.</p>

<p class=MsoNormal style='margin-left:25.4pt'>If you’re certain that any
decoding errors in the text would have affected the entire text in the same
way, and you don’t mind operations that scale with the length of the text, you
can use fix_text_segment directly to fix the whole string in one batch.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:24.15pt;
margin-bottom:.45pt;margin-left:130.75pt;text-align:left;text-indent:-131.5pt;
line-height:110%'>ftfy.<b>fix_text_segment</b>(<i>text</i>, <i>fix_entities=’auto’</i>,
<i>remove_terminal_escapes=True</i>, <i>fix_encoding=True</i>, <i>fix_latin_ligatures=True</i>,      <i>fix_character_width=True</i>,  <i>uncurl_quotes=True</i>,
<i>fix_line_breaks=True</i>, <i>fix_surrogates=True</i>, <i>remove_control_chars=True</i>,
<i>remove_bom=True</i>, <i>normalization=’NFC’</i>)</p>

<p class=MsoNormal style='margin-left:25.4pt'>Apply fixes to text in a single
chunk. This could be a line of text within a larger run of fix_text, or it
could be a larger amount of text that you are certain is in a consistent
encoding.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See fix_text for a description of
the parameters.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.<b>fix_encoding</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.25pt;
margin-left:25.4pt'>Fix text with incorrectly-decoded garbage (“mojibake”)
whenever possible.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:25.4pt'>This function looks for the evidence of mojibake,
formulates a plan to fix it, and applies the plan. It determines whether it
should replace nonsense sequences of single-byte characters that were really
meant to be UTF-8 characters, and if so, turns them into the correctly-encoded
Unicode character that they were meant to represent.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:25.4pt;line-height:128%'>The input to the function must be Unicode.
If you don’t have Unicode text, you’re not using the right tool to solve your
problem. fix_encoding decodes text that looks like it was decoded incorrectly.
It leaves alone text that doesn’t.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:238.65pt'>

<p class=MsoNormal align=left style='margin-bottom:11.5pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:110%'>(fix_encoding(</span><span
style='font-size:9.0pt;line-height:110%;color:#4070A1'>'Ãºnico'</span><span
style='font-size:9.0pt;line-height:110%'>)) </span><span style='font-size:9.0pt;
line-height:110%;color:#333333'>único</span></p>

</div>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:41.3pt'>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:109%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:109%'>(fix_encoding(</span><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>'This text is fine
already :þ'</span><span style='font-size:9.0pt;line-height:109%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:10.65pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>This text is fine already :þ</span></p>

</div>

<p class=MsoNormal style='margin-left:25.4pt'>Because these characters often
come from Microsoft products, we allow for the possibility that we get not just
Unicode characters 128-255, but also Windows’s conflicting idea of what
characters 128-160 are.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:41.3pt'>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:109%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:109%'>(fix_encoding(</span><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>'This â<s>C</s>” should
be an em dash'</span><span style='font-size:9.0pt;line-height:109%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:9.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>This -- should be an em dash</span></p>

</div>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.0pt;
margin-left:25.4pt'>We might have to deal with both Windows characters and raw
control characters at the same time, especially when dealing with characters
like 0x81 that have no mapping in Windows. This is a string that Python’s
standard .encode and .decode methods cannot correct.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:141.85pt'>

<p class=MsoNormal align=left style='margin-bottom:9.55pt;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:109%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:109%'>(fix_encoding(</span><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>'This text is sad .â<b>\x81</b>”.'</span><span
style='font-size:9.0pt;line-height:109%'>)) </span><span style='font-size:9.0pt;
line-height:109%;color:#333333'>This text is sad ..</span></p>

</div>

<p class=MsoNormal style='margin-left:25.4pt'>However, it has safeguards
against fixing sequences of letters and punctuation that can occur in valid
text. In the following example, the last three characters are not replaced with
a Korean character, even though they could be.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:77.25pt'>

<p class=MsoNormal align=left style='margin-bottom:9.55pt;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:109%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:109%'>(fix_encoding(</span><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>'not such a fan of
Charlotte Brontë...”'</span><span style='font-size:9.0pt;line-height:109%'>)) </span><span
style='font-size:9.0pt;line-height:109%;color:#333333'>not such a fan of
Charlotte Brontë...”</span></p>

</div>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.15pt;
margin-left:25.4pt'>This function can now recover some complex manglings of
text, such as when UTF-8 mojibake has been normalized in a way that replaces
U+A0 with a space:</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:41.3pt'>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:109%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:109%'>(fix_encoding(</span><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>'The more you know ðŸŒ '</span><span
style='font-size:9.0pt;line-height:109%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:10.65pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>The more you know</span></p>

</div>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.45pt;
margin-left:25.4pt'>Cases of genuine ambiguity can sometimes be addressed by
finding other characters that are not double-encoded, and expecting the
encoding to be consistent:</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:41.3pt'>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:109%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:109%'>(fix_encoding(</span><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>'AHÅ™, the new sofa from
IKEA®'</span><span style='font-size:9.0pt;line-height:109%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:10.25pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>AHÅ™, the new sofa from IKEA®</span></p>

</div>

<p class=MsoNormal style='margin-left:25.4pt'>Finally, we handle the case where
the text is in a single-byte encoding that was intended as Windows-1252 all
along but read as Latin-1:</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:82.65pt'>

<p class=MsoNormal align=left style='margin-bottom:11.05pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:110%'>(fix_encoding(</span><span
style='font-size:9.0pt;line-height:110%;color:#4070A1'>'This text was never
UTF-8 at all<b>\x85</b>'</span><span style='font-size:9.0pt;line-height:110%'>))
</span><span style='font-size:9.0pt;line-height:110%;color:#333333'>This text
was never UTF-8 at all...</span></p>

</div>

<p class=MsoNormal style='margin-left:25.4pt'>The best version of the text is
found using <i><span style='color:#355F7C'>ftfy.badness.text_cost()</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:24.15pt;
margin-bottom:4.6pt;margin-left:24.65pt;text-align:left;text-indent:-25.4pt;
line-height:110%'>ftfy.<b>fix_file</b>(<i>input_file</i>,          <i>encoding=None</i>,   <i>fix_entities=’auto’</i>,               <i>remove_terminal_escapes=True</i>,
<i>fix_encoding=True</i>,     <i>fix_latin_ligatures=True</i>,     <i>fix_character_width=True</i>,
<i>uncurl_quotes=True</i>,           <i>fix_line_breaks=True</i>,     <i>fix_surrogates=True</i>,            <i>remove_control_chars=True</i>,
<i>remove_bom=True</i>, <i>normalization=’NFC’</i>) Fix text that is found in a
file.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.75pt;
margin-left:25.4pt'>If the file is being read as Unicode text, use that. If
it’s being read as bytes, then we hope an encoding was supplied. If not,
unfortunately, we have to guess what encoding it is. We’ll try a few common
encodings, but we make no promises. See the guess_bytes function for how this
is done.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.7pt;
margin-left:25.4pt'>The output is a stream of fixed lines of text.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.<b>explain_unicode</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.25pt;
margin-left:25.4pt'>A utility method that’s useful for debugging mysterious
Unicode.</p>

<p class=MsoNormal style='margin-left:25.4pt'>It breaks down a string, showing
you for each codepoint its number in hexadecimal, its glyph, its category in
the Unicode standard, and its name in the Unicode standard.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:82.65pt'>

<p class=MsoNormal align=left style='margin-bottom:1.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:110%'>explain_unicode(</span><span style='font-size:9.0pt;
line-height:110%;color:#4070A1'>'(°°) '</span><span style='font-size:9.0pt;
line-height:110%'>)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+0028 (                              [Ps] LEFT
PARENTHESIS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+256F                                  [So]
BOX DRAWINGS LIGHT ARC UP AND LEFT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+00B0 °                            [So] DEGREE
SIGN</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+25A1                           [So] WHITE
SQUARE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+00B0 °                            [So] DEGREE
SIGN</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+0029 )                              [Pe]
RIGHT PARENTHESIS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+256F                                  [So]
BOX DRAWINGS LIGHT ARC UP AND LEFT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+FE35                                  [Ps]
PRESENTATION FORM FOR VERTICAL LEFT PARENTHESIS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+0020                             [Zs] SPACE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+253B                                [So] BOX
DRAWINGS HEAVY UP AND HORIZONTAL</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+2501                              [So] BOX
DRAWINGS HEAVY HORIZONTAL</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:97.15pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+253B                                [So] BOX
DRAWINGS HEAVY UP AND HORIZONTAL</span></p>

</div>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><b>Chapter
4. Using ftfy</b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:73.4pt;margin-left:0in;text-align:right;text-indent:0in;
line-height:110%'><b><span style='font-size:14.5pt;line-height:110%'>5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:110%'>Non-Unicode
strings</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:51.3pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 20239"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.45pt;
margin-left:-.25pt'>When first using ftfy, you might be confused to find that
you can’t give it a bytestring (the type of object called str in Python 2).</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:-.25pt'>ftfy fixes text. Treating bytestrings as text is exactly
the kind of thing that causes the Unicode problems that ftfy has to fix. So if
you don’t give it a Unicode string, ftfy will point you to the <a
href="http://docs.python.org/3/howto/unicode.html"><span style='color:#377063;
text-decoration:none'>Python Unicode HOWTO</span></a><a
href="http://docs.python.org/3/howto/unicode.html"><span style='color:black;
text-decoration:none'>.</span></a></p>

<p class=MsoNormal style='margin-left:-.25pt'>Reasonable ways that you might exchange
data, such as JSON or XML, already have perfectly good ways of expressing
Unicode strings. Given a Unicode string, ftfy can apply fixes that are very
likely to work without false positives.<br clear=all style='page-break-before:
always'>
</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>Chapter
5. Non-Unicode strings</b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:73.4pt;margin-left:0in;text-align:right;text-indent:0in;
line-height:110%'><b><span style='font-size:14.5pt;line-height:110%'>6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:110%'>A note on
encoding detection</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:51.3pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 18987"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>If your input is a mess of
unmarked bytes, you might want a tool that can just statistically analyze those
bytes and predict what encoding they’re in.</p>

<p class=MsoNormal style='margin-left:-.25pt'>ftfy is not that tool. The ftfy.guess_bytes()
function it contains will do this in very limited cases, but to support more
encodings from around the world, something more is needed.</p>

<p class=MsoNormal align=left style='margin-left:-.25pt;text-align:left;
line-height:102%'>You may have heard of chardet. Chardet is admirable, but it
doesn’t completely do the job either. Its heuristics are designed for
multi-byte encodings, such as UTF-8 and the language-specific encodings used in
East Asian languages. It works badly on single-byte encodings, to the point
where it will output wrong answers with high confidence.</p>

<p class=MsoNormal style='margin-left:-.25pt'>ftfy.guess_bytes() doesn’t even
try the East Asian encodings, so the ideal thing would combine the simple
heuristic of ftfy.guess_bytes() with the multibyte character set detection of chardet.
This ideal thing doesn’t exist yet.<br clear=all style='page-break-before:always'>
</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>Chapter
6. A note on encoding detection</b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:73.4pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%'>7 Accuracy</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:51.3pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 19293"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>ftfy uses Twitter’s streaming API
as an endless source of realistic sample data. Twitter is massively
multilingual, and despite that it’s supposed to be uniformly UTF-8, in
practice, any encoding mistake that someone can make will be made by someone’s
Twitter client.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.4pt;
margin-left:-.25pt'>We check what ftfy’s fix_encoding() heuristic does to this
data, and we aim to have the rate of false positives be indistinguishable from
zero.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:-.25pt'>A pre-release version of ftfy was evaluated on 30,880,000
tweets received from Twitter’s streaming API in April 2015. There was 1 false
positive, and it was due to a bug that has now been fixed.</p>

<p class=MsoNormal style='margin-left:-.25pt'>When looking at the changes ftfy
makes, we found:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><i><span
style='color:#355F7C'>ftfy.fix_text()</span></i>, with all default options,
will change about 1 in 18 tweets.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>With
stylistic changes (fix_character_width and uncurl_quotes) turned off, <i><span
style='color:#355F7C'>ftfy.fix_text() </span></i>will change about 1 in every
300 tweets.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span><i><span
style='color:#355F7C'>ftfy.fix_encoding() </span></i>alone will change about 1
in every 8500 tweets.</p>

<p class=MsoNormal style='margin-left:-.25pt'>We sampled 1000 of these <i><span
style='color:#355F7C'>ftfy.fix_encoding() </span></i>changes for further
evaluation, and found:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>980
of them correctly restored the text.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>12
of them incompletely or incorrectly restored the text, when a sufficiently
advanced heuristic might have been able to fully recover the text.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>8
of them represented text that had lost too much information to be fixed.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.55pt;
margin-left:24.9pt;text-indent:-8.45pt'><span style='line-height:103%'>•<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>None of those 1000
changed correct text to incorrect text (these would be false positives).</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.5pt;
margin-left:-.25pt'>In all the data we’ve sampled, including from previous
versions of ftfy, there are only three false positives that remain that we know
of:</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=633
 style='width:474.4pt;margin-left:-3.2pt;border-collapse:collapse'>
 <tr style='height:46.35pt'>
  <td width=633 valign=top style='width:474.4pt;border:solid black 1.0pt;
  padding:3.3pt 5.75pt 0in 3.2pt;height:46.35pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:72.7pt;
  margin-bottom:1.7pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:normal'><span style='font-size:9.0pt'>fix_encoding('aaaaa') ==
  'ôaaaaa' fix_encoding('ESSE CARA AI QUEM É¿') == 'ESSE CARA AI QUEM '
  fix_encoding('``hogwarts nao existe, voce nao vai pegar o trem pra lá´´')</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:10.75pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>==
  '``hogwarts nao existe, voce nao vai pegar o trem pra l'</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>Chapter
7. Accuracy</b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:73.4pt;margin-left:52.45pt;text-align:right;text-indent:0in;
line-height:110%'><b><span style='font-size:14.5pt;line-height:110%'>8<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:110%'>Command-line
tool</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:51.3pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 22686"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>ftfy can be used from the command
line. By default, it takes UTF-8 input and writes it to UTF-8 output, fixing
problems in its Unicode as it goes.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.5pt;
margin-left:-.25pt'>Here’s the usage documentation for the ftfy command:</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=633
 style='width:474.4pt;margin-left:-3.2pt;border-collapse:collapse'>
 <tr style='height:275.25pt'>
  <td width=633 valign=top style='width:474.4pt;border:solid black 1.0pt;
  padding:3.3pt 5.75pt 0in 3.2pt;height:275.25pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-size:9.0pt;line-height:107%'>usage:
  ftfy [-h] [-o OUTPUT] [-g] [-e ENCODING] [-n NORMALIZATION]</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:234.1pt;
  margin-bottom:10.95pt;margin-left:64.55pt;text-align:left;text-indent:0in;
  line-height:normal'><span style='font-size:9.0pt'>[--preserve-entities]
  [filename]</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:10.1pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>ftfy (fixes
  text for you), version 4.0.0</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:.85pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>positional
  arguments:</span></p>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-size:11.0pt;line-height:107%'>       </span><span
  style='font-size:9.0pt;line-height:107%'>filename                                                          The
  file whose Unicode is to be fixed. Defaults to -,</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:10.1pt;margin-left:129.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>meaning
  standard input.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:.85pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>optional
  arguments:</span></p>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-size:11.0pt;line-height:107%'>         </span><span
  style='font-size:9.0pt;line-height:107%'>-h, --help                                            show
  this help message and exit</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:10.75pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>-o OUTPUT,
  --output OUTPUT</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:8.15pt;
  margin-bottom:1.7pt;margin-left:129.1pt;text-align:left;text-indent:0in;
  line-height:normal'><span style='font-size:9.0pt'>The file to output to.
  Defaults to -, meaning standard output.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:18.9pt;
  margin-bottom:0in;margin-left:129.1pt;text-align:left;text-indent:-118.35pt;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>-g, --guess                                    Ask
  ftfy to guess the encoding of your input. This is risky. Overrides -e.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:10.75pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>-e ENCODING,
  --encoding ENCODING</span></p>
  <p class=MsoNormal align=center style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:34.9pt;text-align:center;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>The encoding
  of the input. Defaults to UTF-8.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:10.75pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>-n
  NORMALIZATION, --normalization NORMALIZATION</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:45.8pt;
  margin-bottom:1.7pt;margin-left:129.1pt;text-align:left;text-indent:0in;
  line-height:normal'><span style='font-size:9.0pt'>The normalization of
  Unicode to apply. Defaults to NFC. Can be &quot;none&quot;.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:35.05pt;
  margin-bottom:0in;margin-left:129.1pt;text-align:left;text-indent:-118.35pt;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>--preserve-entities                      Leave
  HTML entities as they are. The default is to decode them, as long as no HTML
  tags have appeared in the file.</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>Chapter
8. Command-line tool</b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:73.4pt;margin-left:52.45pt;text-align:right;text-indent:0in;
line-height:110%'><b><span style='font-size:14.5pt;line-height:110%'>9<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:110%'>Module
documentation</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:53.65pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 25800"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<h1 style='margin-left:-.25pt'>9.1 <i>ftfy.fixes</i>: how individual fixes are
implemented</h1>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.7pt;
margin-left:-.25pt'>This module contains the individual fixes that the main
fix_text function can perform.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>unescape_html</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:25.4pt'>Decode all three types of HTML entities/character
references.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Code by Fredrik Lundh of
effbot.org. Rob Speer made a slight change to it for efficiency: it won’t match
entities longer than 8 characters, because there are no valid entities like
that.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:41.3pt'>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:110%'>(unescape_html(</span><span
style='font-size:9.0pt;line-height:110%;color:#4070A1'>'&amp;lt;tag&amp;gt;'</span><span
style='font-size:9.0pt;line-height:110%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:11.05pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>&lt;tag&gt;</span></p>

</div>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>remove_terminal_escapes</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-left:25.4pt'>Strip out “ANSI” terminal escape
sequences, such as those that produce colored text on Unix.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:0in'>

<p class=MsoNormal align=left style='margin-bottom:1.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:110%'>(remove_terminal_escapes(</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.4pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
109%;border:none;padding:0in'><b><span style='font-size:9.0pt;line-height:109%;
color:#C75C0A'>...                                  </span></b><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>&quot;<b>\033</b>[36;44mI'm
blue, da ba dee da ba doo...<b>\033</b>[0m&quot;</span></p>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:107%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:107%;color:#C75C0A'>... </span></b><span style='font-size:9.0pt;
line-height:107%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:10.65pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>I'm blue, da ba dee da ba doo...</span></p>

</div>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>uncurl_quotes</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-left:25.4pt'>Replace curly quotation marks
with straight equivalents.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.55pt;
margin-right:41.3pt'>

<p class=MsoNormal align=left style='margin-bottom:.05pt;text-align:left;
line-height:107%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:107%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:107%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:107%'>(uncurl_quotes(</span><span
style='font-size:9.0pt;line-height:107%;color:#4070A1'>'<b>\u201c</b>here<b>\u2019</b>s
a test<b>\u201d</b>'</span><span style='font-size:9.0pt;line-height:107%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:9.85pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>&quot;here's a test&quot;</span></p>

</div>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>fix_latin_ligatures</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.35pt;
margin-left:25.4pt'>Replace single-character ligatures of Latin letters, such
as ‘’, with the characters that they contain, as in ‘fi’. Latin ligatures are
usually not intended in text strings (though they’re lovely in <i>rendered </i>text).
If you have such a ligature in your string, it is probably a result of a
copy-and-paste glitch.</p>

<p class=MsoNormal style='margin-left:25.4pt'>We leave ligatures in other
scripts alone to be safe. They may be intended, and removing them may lose
information. If you want to take apart nearly all ligatures, use NFKC
normalization.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:201.0pt'>

<p class=MsoNormal align=left style='margin-bottom:9.8pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:110%'>(fix_latin_ligatures(</span><span
style='font-size:9.0pt;line-height:110%;color:#4070A1'>&quot;ue&quot;</span><span
style='font-size:9.0pt;line-height:110%'>)) </span><span style='font-size:9.0pt;
line-height:110%;color:#333333'>fluffiest</span></p>

</div>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>fix_character_width</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:25.4pt'>The ASCII characters, katakana, and Hangul characters have
alternate “halfwidth” or “fullwidth” forms that help text line up in a grid.</p>

<p class=MsoNormal style='margin-left:25.4pt'>If you don’t need these width
properties, you probably want to replace these characters with their standard
form, which is what this function does.</p>

</div>

<span style='font-size:10.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection6>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.5pt;
margin-left:25.4pt'>Note that this replaces the ideographic space, U+3000, with
the ASCII space, U+20.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=633
 style='width:474.4pt;margin-left:-3.2pt;border-collapse:collapse'>
 <tr style='height:45.35pt'>
  <td width=303 valign=top style='width:227.15pt;border:solid black 1.0pt;
  border-right:none;padding:3.55pt 5.75pt 2.0pt 0in;height:45.35pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:.05pt;margin-left:28.1pt;text-align:left;text-indent:0in;
  line-height:107%'><b><span style='font-size:9.0pt;line-height:107%;
  color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span style='font-size:9.0pt;
  line-height:107%;color:#007021'>print</span></b><span style='font-size:9.0pt;
  line-height:107%'>(fix_character_width(</span><span style='font-size:9.0pt;
  line-height:107%;color:#4070A1'>&quot;&quot;</span><span style='font-size:
  9.0pt;line-height:107%'>))</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:.85pt;margin-left:28.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%;color:#333333'>LOUD
  NOISES</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:.05pt;margin-left:28.1pt;text-align:left;text-indent:0in;
  line-height:107%'><b><span style='font-size:9.0pt;line-height:107%;
  color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span style='font-size:9.0pt;
  line-height:107%;color:#007021'>print</span></b><span style='font-size:9.0pt;
  line-height:107%'>(fix_character_width(</span><span style='font-size:9.0pt;
  line-height:107%;color:#4070A1'>&quot;&quot;</span><span style='font-size:
  9.0pt;line-height:107%'>))</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:28.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%;color:#333333'>U</span></p>
  </td>
  <td width=330 valign=bottom style='width:247.25pt;border:solid black 1.0pt;
  border-left:none;padding:3.55pt 5.75pt 2.0pt 0in;height:45.35pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><i><span style='font-size:9.0pt;line-height:107%;
  color:#407F8F'># this means &quot;U-turn&quot;</span></i></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:254.7pt;margin-bottom:
5.4pt;margin-left:24.15pt;text-indent:-24.9pt'>ftfy.fixes.<b>fix_line_breaks</b>(<i>text</i>)
Convert all line breaks to Unix style.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:25.4pt'>This will convert the following sequences into the standard
\n line break:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:43.85pt'>•CRLF (\r\n), used on Windows and in some communication
protocols</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:46.85pt;text-indent:-3.5pt'>•CR (\r), once used on Mac OS Classic,
and now kept alive by misguided software such as Microsoft Office for Mac</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:46.85pt;text-indent:-3.5pt'>•LINE SEPARATOR (\u2028) and PARAGRAPH
SEPARATOR (\u2029), defined by Unicode and used to sow confusion and discord</p>

<p class=MsoNormal style='margin-left:43.85pt'>•NEXT LINE (\x85), a C1 control
character that is certainly not what you meant</p>

<p class=MsoNormal style='margin-left:25.4pt'>The NEXT LINE character is a bit
of an odd case, because it usually won’t show up if fix_encoding is also being
run. \x85 is very common mojibake for \u2026, HORIZONTAL ELLIPSIS.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:0in'>

<p class=MsoNormal align=left style='margin-bottom:1.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:110%'>(fix_line_breaks(</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.65pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>...                                </span></b><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>&quot;This string is
made of two things:<b>\u2029</b>&quot;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.7pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
109%;border:none;padding:0in'><b><span style='font-size:9.0pt;line-height:109%;
color:#C75C0A'>...                      </span></b><span style='font-size:9.0pt;
line-height:109%;color:#4070A1'>&quot;1. Unicode<b>\u2028</b>&quot;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.4pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
109%;border:none;padding:0in'><b><span style='font-size:9.0pt;line-height:109%;
color:#C75C0A'>...                    </span></b><span style='font-size:9.0pt;
line-height:109%;color:#4070A1'>&quot;2. Spite&quot;</span></p>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:107%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:107%;color:#C75C0A'>... </span></b><span style='font-size:9.0pt;
line-height:107%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>This string is made of two things:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:110%;color:#333333'>Unicode</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:10.65pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:110%;color:#333333'>Spite</span></p>

</div>

<p class=MsoNormal style='margin-left:25.4pt'>For further testing and examples,
let’s define a function to make sure we can see the control characters in their
escaped form:</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:0in'>

<p class=MsoNormal align=left style='margin-bottom:1.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>def </span></b><span
style='font-size:9.0pt;line-height:110%;color:#05297D'>eprint</span><span
style='font-size:9.0pt;line-height:110%'>(text):</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:13.3pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>...                                    </span></b><b><span
style='font-size:9.0pt;line-height:109%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:109%'>(text</span><span style='font-size:
9.0pt;line-height:109%;color:#666666'>.</span><span style='font-size:9.0pt;
line-height:109%'>encode(</span><span style='font-size:9.0pt;line-height:109%;
color:#4070A1'>'unicode-escape'</span><span style='font-size:9.0pt;line-height:
109%'>)</span><span style='font-size:9.0pt;line-height:109%;color:#666666'>.</span><span
style='font-size:9.0pt;line-height:109%'>decode(</span><span style='font-size:
9.0pt;line-height:109%;color:#4070A1'>'ascii'</span><span style='font-size:
9.0pt;line-height:109%'>))</span></p>

</div>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:82.65pt'>

<p class=MsoNormal align=left style='margin-bottom:12.2pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:110%'>eprint(fix_line_breaks(</span><span style='font-size:
9.0pt;line-height:110%;color:#4070A1'>&quot;Content-type: text/plain<b>\r\n\r\n</b>Hi.&quot;</span><span
style='font-size:9.0pt;line-height:110%'>)) </span><span style='font-size:9.0pt;
line-height:110%;color:#333333'>Content-type: text/plain\n\nHi.</span></p>

</div>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:41.3pt'>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:109%'>eprint(fix_line_breaks(</span><span style='font-size:
9.0pt;line-height:109%;color:#4070A1'>&quot;This is how Microsoft <b>\r </b>trolls
Mac users&quot;</span><span style='font-size:9.0pt;line-height:109%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:11.55pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>This is how Microsoft \n trolls Mac users</span></p>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:109%'>eprint(fix_line_breaks(</span><span style='font-size:
9.0pt;line-height:109%;color:#4070A1'>&quot;What is this <b>\x85 </b>I don't
even&quot;</span><span style='font-size:9.0pt;line-height:109%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:10.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>What is this \n I don't even</span></p>

</div>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>fix_surrogates</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-left:25.4pt'>Replace 16-bit surrogate
codepoints with the characters they represent (when properly paired), or with
otherwise.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:0in'>

<p class=MsoNormal align=left style='margin-bottom:1.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:110%'>high_surrogate </span><span style='font-size:9.0pt;
line-height:110%;color:#666666'>= </span><span style='font-size:9.0pt;
line-height:110%;color:#007021'>unichr</span><span style='font-size:9.0pt;
line-height:110%'>(</span><span style='font-size:9.0pt;line-height:110%;
color:#217F4F'>0xd83d</span><span style='font-size:9.0pt;line-height:110%'>)</span></p>

<p class=MsoNormal align=left style='margin-bottom:1.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:110%'>low_surrogate </span><span style='font-size:9.0pt;
line-height:110%;color:#666666'>= </span><span style='font-size:9.0pt;
line-height:110%;color:#007021'>unichr</span><span style='font-size:9.0pt;
line-height:110%'>(</span><span style='font-size:9.0pt;line-height:110%;
color:#217F4F'>0xdca9</span><span style='font-size:9.0pt;line-height:110%'>)</span></p>

<p class=MsoNormal align=left style='margin-bottom:12.35pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:110%'>(fix_surrogates(high_surrogate </span><span
style='font-size:9.0pt;line-height:110%;color:#666666'>+ </span><span
style='font-size:9.0pt;line-height:110%'>low_surrogate))</span></p>

<p class=MsoNormal align=left style='margin-bottom:21.1pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:110%'>(fix_surrogates(low_surrogate </span><span
style='font-size:9.0pt;line-height:110%;color:#666666'>+ </span><span
style='font-size:9.0pt;line-height:110%'>high_surrogate))</span></p>

</div>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:25.4pt;text-align:left;line-height:102%'>The
above doctest had to be very carefully written, because even putting the
Unicode escapes of the surrogates in the docstring was causing various tools to
fail, which I think just goes to show why this fixer is necessary. ftfy.fixes.<b>remove_control_chars</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:25.4pt'>Remove all ASCII control characters except for the
important ones.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.25pt;
margin-left:25.4pt'>This removes characters in these ranges:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:43.85pt'>•U+0000 to U+0008</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:43.85pt'>•U+000B</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:43.85pt'>•U+000E to U+001F</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.25pt;
margin-left:43.85pt'>•U+007F</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:25.4pt'>It leaves alone these characters that are commonly used for
formatting:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:43.85pt'>•TAB (U+0009)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:43.85pt'>•LF (U+000A)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.25pt;
margin-left:43.85pt'>•FF (U+000C)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:43.85pt'>•CR (U+000D)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.7pt;
margin-left:25.4pt'>Feel free to object that FF isn’t “commonly” used for
formatting. I’ve at least seen it used.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>remove_bom</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-left:25.4pt'>Remove a byte-order mark that was
accidentally decoded as if it were part of the text.</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:24.15pt;
margin-right:41.3pt'>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:109%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:109%'>(remove_bom(</span><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>&quot;<b>\ufeff</b>Where
do you want to go today?&quot;</span><span style='font-size:9.0pt;line-height:
109%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:11.05pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>Where do you want to go today?</span></p>

</div>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>decode_escapes</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:25.4pt'>Decode backslashed escape sequences, including \x, \u, and
\U character references, even in the presence of other Unicode.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.5pt;
margin-left:25.4pt'>This is what Python’s “string-escape” and “unicode-escape”
codecs were meant to do, but in contrast, this actually works. It will decode
the string exactly the same way that the Python interpreter decodes its string
literals.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=633
 style='width:474.4pt;margin-left:-3.2pt;border-collapse:collapse'>
 <tr style='height:57.65pt'>
  <td width=633 valign=top style='width:474.4pt;border:solid black 1.0pt;
  padding:3.65pt 5.75pt 0in 28.1pt;height:57.65pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:1.75pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'><b><span style='font-size:9.0pt;line-height:107%;
  color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:9.0pt;
  line-height:107%'>factoid </span><span style='font-size:9.0pt;line-height:
  107%;color:#666666'>= </span><span style='font-size:9.0pt;line-height:107%;
  color:#4070A1'>'<b>\\</b>u20a1 is the currency symbol for the colón.'</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:209.2pt;
  margin-bottom:.8pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:108%'><b><span style='font-size:9.0pt;line-height:108%;
  color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span style='font-size:9.0pt;
  line-height:108%;color:#007021'>print</span></b><span style='font-size:9.0pt;
  line-height:108%'>(factoid[</span><span style='font-size:9.0pt;line-height:
  108%;color:#217F4F'>1</span><span style='font-size:9.0pt;line-height:108%'>:])
  </span><span style='font-size:9.0pt;line-height:108%;color:#333333'>u20a1 is
  the currency symbol for the colón.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:2.75pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'><b><span style='font-size:9.0pt;line-height:107%;
  color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span style='font-size:9.0pt;
  line-height:107%;color:#007021'>print</span></b><span style='font-size:9.0pt;
  line-height:107%'>(decode_escapes(factoid))</span></p>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-size:9.0pt;line-height:107%;
  color:#333333'>&#8353; is the currency symbol for the colón.</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:25.4pt'>Even though Python itself can read string literals with a
combination of escapes and literal Unicode – you’re looking at one right now –
the “unicode-escape” codec doesn’t work on literal Unicode. (See <a
href="http://stackoverflow.com/a/24519338/773754"><span style='color:#377063;
text-decoration:none'>http://stackoverflow.com/a/24519338/773754</span></a><span
style='color:#377063'> </span>for more details.)</p>

<p class=MsoNormal style='margin-left:25.4pt'>Instead, this function searches
for just the parts of a string that represent escape sequences, and decodes
them, leaving the rest alone. All valid escape sequences are made of ASCII
characters, and this allows “unicodeescape” to work correctly.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.85pt;
margin-left:25.4pt'>This fix cannot be automatically applied by the ftfy.fix_text
function, because escaped text is not necessarily a mistake, and there is no
way to distinguish text that’s supposed to be escaped from text that isn’t.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>fix_one_step_and_explain</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:25.4pt'>Performs a single step of re-decoding text that’s been
decoded incorrectly.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Returns the decoded text, plus a
“plan” for how to reproduce what it did.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>apply_plan</b>(<i>text</i>,
<i>plan</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.25pt;
margin-left:25.4pt'>Apply a plan for fixing the encoding of text.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:23.15pt;
margin-left:25.4pt'>The plan is a list of tuples of the form (operation,
encoding, cost):</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>9.1.
<i>ftfy.fixes</i>: how individual fixes are implemented</b></p>

<p class=MsoNormal style='margin-left:46.85pt;text-indent:-3.5pt'>•operation is
‘encode’ if it turns a string into bytes, ‘decode’ if it turns bytes into a
string, and ‘transcode’ if it keeps the type the same.</p>

<p class=MsoNormal style='margin-left:46.85pt;text-indent:-3.5pt'>•encoding is
the name of the encoding to use, such as ‘utf-8’ or ‘latin-1’, or the function
name in the case of ‘transcode’.</p>

<p class=MsoNormal style='margin-left:46.85pt;text-indent:-3.5pt'>•The cost does
not affect how the plan itself works. It’s used by other users of plans, namely
fix_encoding_and_explain, which has to decide <i>which </i>plan to use.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>restore_byte_a0</b>(<i>byts</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:25.4pt'>Some mojibake has been additionally altered by a process
that said “hmm, byte A0, that’s basically a space!” and replaced it with an
ASCII space. When the A0 is part of a sequence that we intend to decode as
UTF-8, changing byte A0 to 20 would make it fail to decode.</p>

<p class=MsoNormal style='margin-left:25.4pt'>This process finds sequences that
would convincingly decode as UTF-8 if byte 20 were changed to A0, and puts back
the A0. For the purpose of deciding whether this is a good idea, this step gets
a cost of twice the number of bytes that are changed.</p>

<p class=MsoNormal style='margin-left:25.4pt'>This is used as a step within fix_encoding.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>replace_lossy_sequences</b>(<i>byts</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:4.95pt;
margin-left:25.4pt'>This function identifies sequences where information has
been lost in a “sloppy” codec, indicated by byte 1A, and if they would
otherwise look like a UTF-8 sequence, it replaces them with the UTF-8 sequence
for U+FFFD. A further explanation:</p>

<p class=MsoNormal style='margin-left:25.4pt'>ftfy can now fix text in a few
cases that it would previously fix incompletely, because of the fact that it
can’t successfully apply the fix to the entire string. A very common case of
this is when characters have been erroneously decoded as windows-1252, but
instead of the “sloppy” windows-1252 that passes through unassigned bytes, the
unassigned bytes get turned into U+FFFD (), so we can’t tell what they were.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.7pt;
margin-left:25.4pt'>This most commonly happens with curly quotation marks that
appear â<s>C</s>œ like this â<s>C</s>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>We can do better by building on
ftfy’s “sloppy codecs” to let them handle less-sloppy but more-lossy text. When
they encounter the character , instead of refusing to encode it, they encode it
as byte 1A – an ASCII control code called SUBSTITUTE that once was meant for
about the same purpose. We can then apply a fixer that looks for UTF-8
sequences where some continuation bytes have been replaced by byte 1A, and
decode the whole sequence as ; if that doesn’t work, it’ll just turn the byte
back into itself.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.9pt;
margin-left:25.4pt'>As a result, the above text â<s>C</s>œ like this â<s>C </s>will
decode as “ like this .</p>

<p class=MsoNormal style='margin-left:25.4pt'>If U+1A was actually in the
original string, then the sloppy codecs will not be used, and this function
will not be run, so your weird control character will be left alone but wacky
fixes like this won’t be possible.</p>

<p class=MsoNormal style='margin-left:25.4pt'>This is used as a step within fix_encoding.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes.<b>fix_partial_utf8_punct_in_1252</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:25.4pt'>Fix particular characters that seem to be found in the wild
encoded in UTF-8 and decoded in Latin-1 or Windows-1252, even when this fix
can’t be consistently applied.</p>

<p class=MsoNormal style='margin-left:25.4pt'>For this function, we assume the
text has been decoded in Windows-1252. If it was decoded in Latin-1, we’ll call
this right after it goes through the Latin-1-to-Windows-1252 fixer.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:28.15pt;
margin-left:25.4pt'>This is used as a step within fix_encoding.</p>

<h1 style='margin-left:-.25pt'>9.2 <i>ftfy.badness</i>: measures the “badness”
of text</h1>

<p class=MsoNormal style='margin-left:-.25pt'>Heuristics to determine whether
re-encoding text is actually making it more reasonable.</p>

</div>

<span style='font-size:10.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection7>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.badness.<b>sequence_weirdness</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:25.4pt'>Determine how often a text has unexpected characters or
sequences of characters. This metric is used to disambiguate when text should
be re-decoded or left as is.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:25.4pt'>We start by normalizing text in NFC form, so that penalties
for diacritical marks don’t apply to characters that know what to do with them.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.25pt;
margin-left:25.4pt'>The following things are deemed weird:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:43.85pt'>•Lowercase letters followed by non-ASCII uppercase letters</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:43.85pt'>•Non-Latin characters next to Latin characters</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:46.85pt;text-indent:-3.5pt'>•Un-combined diacritical marks, unless
they’re stacking on non-alphabetic characters (in languages that do that kind
of thing a lot) or other marks</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:43.85pt'>•C1 control characters</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.4pt;
margin-left:43.85pt'>•Adjacent symbols from any different pair of these
categories:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.4pt;
margin-left:60.95pt'>–Modifier marks</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.4pt;
margin-left:60.95pt'>–Letter modifiers</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.4pt;
margin-left:60.95pt'>–Non-digit numbers</p>

<p class=MsoNormal style='margin-top:0in;margin-right:215.35pt;margin-bottom:
.4pt;margin-left:24.9pt;text-indent:35.55pt;line-height:147%'>–Symbols
(including math and currency) The return value is the number of instances of
weirdness.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.badness.<b>text_cost</b>(<i>text</i>)</p>

<p class=MsoNormal style='margin-left:25.4pt'>An overall cost function for
text. Weirder is worse, but all else being equal, shorter strings are better.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:28.1pt;
margin-left:25.4pt'>The overall cost is measured as the “weirdness” (see <i><span
style='color:#355F7C'>sequence_weirdness()</span></i>) plus the length.</p>

<h1 style='margin-left:-.25pt'>9.3 <i>ftfy.bad_codecs</i>: support some
encodings Python doesn’t like</h1>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.25pt;
margin-left:-.25pt'>Give Python the ability to decode some common, flawed
encodings.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.35pt;
margin-left:-.25pt'>Python does not want you to be sloppy with your text. Its encoders
and decoders (“codecs”) follow the relevant standards whenever possible, which
means that when you get text that <i>doesn’t </i>follow those standards, you’ll
probably fail to decode it. Or you might succeed at decoding it for
implementation-specific reasons, which is perhaps worse.</p>

<p class=MsoNormal style='margin-left:-.25pt'>There are some encodings out
there that Python wishes didn’t exist, which are widely used outside of Python:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>“utf-8-variants”,
a family of not-quite-UTF-8 encodings, including the ever-popular CESU-8 and
“Java modified UTF-8”.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>“Sloppy”
versions of character map encodings, where bytes that don’t map to anything
will instead map to the Unicode character with the same number.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.5pt;
margin-left:-.25pt'>Simply importing this module, or in fact any part of the ftfy
package, will make these new “bad codecs” available to Python through the
standard Codecs API. You never have to actually call any functions inside ftfy.bad_codecs.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=633
 style='width:474.4pt;margin-left:-3.2pt;border-collapse:collapse'>
 <tr style='height:45.8pt'>
  <td width=499 valign=top style='width:374.15pt;border:none;border-bottom:
  solid black 1.0pt;padding:0in 3.2pt 0in 0in;height:45.8pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:5.85pt;margin-left:3.2pt;text-align:left;text-indent:0in;
  line-height:104%'>However,             if              you         want       to            call          something             because               your        code       checker insists
  ftfy.bad_codecs.ok().</p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:3.2pt;text-align:left;text-indent:0in;
  line-height:107%'>A quick example of decoding text that’s encoded in CESU-8:</p>
  </td>
  <td width=25 valign=top style='width:18.55pt;border:none;border-bottom:solid black 1.0pt;
  padding:0in 3.2pt 0in 0in;height:45.8pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>on</p>
  </td>
  <td width=24 valign=top style='width:18.15pt;border:none;border-bottom:solid black 1.0pt;
  padding:0in 3.2pt 0in 0in;height:45.8pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>it,</p>
  </td>
  <td width=31 valign=top style='width:23.55pt;border:none;border-bottom:solid black 1.0pt;
  padding:0in 3.2pt 0in 0in;height:45.8pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>you</p>
  </td>
  <td width=30 valign=top style='width:22.45pt;border:none;border-bottom:solid black 1.0pt;
  padding:0in 3.2pt 0in 0in;height:45.8pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>can</p>
  </td>
  <td width=23 valign=top style='width:17.55pt;border:none;border-bottom:solid black 1.0pt;
  padding:0in 3.2pt 0in 0in;height:45.8pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'>call</p>
  </td>
 </tr>
 <tr style='height:34.25pt'>
  <td width=499 valign=top style='width:374.15pt;border-top:none;border-left:
  solid black 1.0pt;border-bottom:solid black 1.0pt;border-right:none;
  padding:0in 3.2pt 0in 0in;height:34.25pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:1.9pt;margin-left:3.2pt;text-align:left;text-indent:0in;
  line-height:107%'><b><span style='font-size:9.0pt;line-height:107%;
  color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span style='font-size:9.0pt;
  line-height:107%;color:#007021'>import </span></b><b><span style='font-size:
  9.0pt;line-height:107%;color:#0D85B5'>ftfy.bad_codecs</span></b></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:3.2pt;text-align:left;text-indent:0in;
  line-height:107%'><b><span style='font-size:9.0pt;line-height:107%;
  color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span style='font-size:9.0pt;
  line-height:107%;color:#007021'>print</span></b><span style='font-size:9.0pt;
  line-height:107%'>(b</span><span style='font-size:9.0pt;line-height:107%;
  color:#4070A1'>'<b>\xed\xa0\xbd\xed\xb8\x8d</b>'</span><span
  style='font-size:9.0pt;line-height:107%;color:#666666'>.</span><span
  style='font-size:9.0pt;line-height:107%'>decode(</span><span
  style='font-size:9.0pt;line-height:107%;color:#4070A1'>'utf-8-variants'</span><span
  style='font-size:9.0pt;line-height:107%'>))</span></p>
  </td>
  <td width=25 valign=top style='width:18.55pt;border:none;border-bottom:solid black 1.0pt;
  padding:0in 3.2pt 0in 0in;height:34.25pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'>&nbsp;</p>
  </td>
  <td width=24 valign=top style='width:18.15pt;border:none;border-bottom:solid black 1.0pt;
  padding:0in 3.2pt 0in 0in;height:34.25pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'>&nbsp;</p>
  </td>
  <td width=31 valign=top style='width:23.55pt;border:none;border-bottom:solid black 1.0pt;
  padding:0in 3.2pt 0in 0in;height:34.25pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'>&nbsp;</p>
  </td>
  <td width=30 valign=top style='width:22.45pt;border:none;border-bottom:solid black 1.0pt;
  padding:0in 3.2pt 0in 0in;height:34.25pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'>&nbsp;</p>
  </td>
  <td width=23 valign=top style='width:17.55pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  padding:0in 3.2pt 0in 0in;height:34.25pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'>&nbsp;</p>
  </td>
 </tr>
</table>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.95pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 25041"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>9.3.
<i>ftfy.bad_codecs</i>: support some encodings Python doesn’t like</b></p>

<h2 style='margin-left:-.25pt'>9.3.1 “Sloppy” encodings</h2>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:-.25pt'>Decodes single-byte encodings, filling their “holes” in the
same messy way that everyone else does.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:-.25pt'>A single-byte encoding maps each byte to a Unicode
character, except that some bytes are left unmapped. In the commonly-used
Windows-1252 encoding, for example, bytes 0x81 and 0x8D, among others, have no
meaning.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:-.25pt'>Python, wanting to preserve some sense of decorum, will
handle these bytes as errors. But Windows knows that 0x81 and 0x8D are possible
bytes and they’re different from each other. It just hasn’t defined what they
are in terms of Unicode.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:-.25pt'>Software that has to interoperate with Windows-1252 and
Unicode – such as all the common Web browsers – will pick some Unicode
characters for them to map to, and the characters they pick are the Unicode
characters with the same numbers: U+0081 and U+008D. This is the same as what
Latin-1 does, and the resulting characters tend to fall into a range of Unicode
that’s set aside for obselete Latin-1 control characters anyway.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:-.25pt'>These sloppy codecs let Python do the same thing, thus
interoperating with other software that works this way. It defines a sloppy
version of many single-byte encodings with holes. (There is no need for a
sloppy version of an encoding without holes: for example, there is no such
thing as sloppy-iso-8859-2 or sloppy-macroman.)</p>

<p class=MsoNormal style='margin-left:-.25pt'>The following encodings will
become defined:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-windows-1250
(Central European, sort of based on ISO-8859-2)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-windows-1251
(Cyrillic)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-windows-1252
(Western European, based on Latin-1)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-windows-1253
(Greek, sort of based on ISO-8859-7)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-windows-1254
(Turkish, based on ISO-8859-9)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-windows-1255
(Hebrew, based on ISO-8859-8)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-windows-1256
(Arabic)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-windows-1257
(Baltic, based on ISO-8859-13)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-windows-1258
(Vietnamese)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-cp874
(Thai, based on ISO-8859-11)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-iso-8859-3
(Maltese and Esperanto, I guess)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-iso-8859-6
(different Arabic)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-iso-8859-7
(Greek)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.45pt'><span
style='line-height:103%'>•<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-iso-8859-8
(Hebrew)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.55pt;
margin-left:24.9pt;text-indent:-8.45pt'><span style='line-height:103%'>•<span
style='font:7.0pt "Times New Roman"'>&nbsp; </span></span>sloppy-iso-8859-11
(Thai)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:-.25pt'>Aliases such as “sloppy-cp1252” for “sloppy-windows-1252”
will also be defined.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Only sloppy-windows-1251 and
sloppy-windows-1252 are used by the rest of ftfy; the rest are rather uncommon.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Here are some examples, using ftfy.explain_unicode
to illustrate how sloppy-windows-1252 merges Windows-1252 with Latin-1:</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:0in;
margin-right:41.3pt'>

<p class=MsoNormal align=left style='margin-bottom:1.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>from </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#0D85B5'>ftfy </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>import </span></b><span
style='font-size:9.0pt;line-height:110%'>explain_unicode</span></p>

<p class=MsoNormal align=left style='margin-bottom:1.7pt;text-align:left;
line-height:107%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:107%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:107%'>some_bytes </span><span style='font-size:9.0pt;
line-height:107%;color:#666666'>= </span><span style='font-size:9.0pt;
line-height:107%'>b</span><span style='font-size:9.0pt;line-height:107%;
color:#4070A1'>'<b>\x80\x81\x82</b>'</span></p>

<p class=MsoNormal align=left style='margin-bottom:1.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:110%'>explain_unicode(some_bytes</span><span
style='font-size:9.0pt;line-height:110%;color:#666666'>.</span><span
style='font-size:9.0pt;line-height:110%'>decode(</span><span style='font-size:
9.0pt;line-height:110%;color:#4070A1'>'latin-1'</span><span style='font-size:
9.0pt;line-height:110%'>))</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+0080 \x80                     [Cc]
&lt;unknown&gt;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+0081 \x81                     [Cc]
&lt;unknown&gt;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+0082 \x82                     [Cc]
&lt;unknown&gt;</span></p>

</div>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in;margin-left:0in;
margin-right:82.65pt'>

<p class=MsoNormal align=left style='margin-bottom:1.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:110%'>explain_unicode(some_bytes</span><span
style='font-size:9.0pt;line-height:110%;color:#666666'>.</span><span
style='font-size:9.0pt;line-height:110%'>decode(</span><span style='font-size:
9.0pt;line-height:110%;color:#4070A1'>'windows-1252'</span><span
style='font-size:9.0pt;line-height:110%'>, </span><span style='font-size:9.0pt;
line-height:110%;color:#4070A1'>'replace'</span><span style='font-size:9.0pt;
line-height:110%'>))</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+20AC <s>C                           </s>[Sc]
EURO SIGN</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+FFFD                            [So]
REPLACEMENT CHARACTER</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:13.15pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+201A ‚                              [Ps]
SINGLE LOW-9 QUOTATION MARK</span></p>

<p class=MsoNormal align=left style='margin-bottom:1.4pt;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:110%'>explain_unicode(some_bytes</span><span
style='font-size:9.0pt;line-height:110%;color:#666666'>.</span><span
style='font-size:9.0pt;line-height:110%'>decode(</span><span style='font-size:
9.0pt;line-height:110%;color:#4070A1'>'sloppy-windows-1252'</span><span
style='font-size:9.0pt;line-height:110%'>))</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+20AC <s>C                           </s>[Sc]
EURO SIGN</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+0081 \x81                     [Cc]
&lt;unknown&gt;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:28.35pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>U+201A ‚                              [Ps]
SINGLE LOW-9 QUOTATION MARK</span></p>

</div>

<h2 style='margin-left:-.25pt'>9.3.2 Variants of UTF-8</h2>

<p class=MsoNormal style='margin-left:-.25pt'>This file defines a codec called
“utf-8-variants” (or “utf-8-var”), which can decode text that’s been encoded
with a popular non-standard version of UTF-8. This includes CESU-8, the
accidental encoding made by layering UTF-8 on top of UTF-16, as well as Java’s
twist on CESU-8 that contains a two-byte encoding for codepoint 0.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.0pt;
margin-left:-.25pt'>This is particularly relevant in Python 3, which provides
no other way of decoding CESU-8 <sup><span style='color:#355F7C'>1</span></sup>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The easiest way to use the codec
is to simply import ftfy.bad_codecs:</p>

<div style='border:solid black 1.0pt;padding:0in 0in 0in 0in'>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.7pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%;border:none;padding:0in'><b><span style='font-size:9.0pt;line-height:107%;
color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span style='font-size:9.0pt;
line-height:107%;color:#007021'>import </span></b><b><span style='font-size:
9.0pt;line-height:107%;color:#0D85B5'>ftfy.bad_codecs</span></b></p>

<p class=MsoNormal align=left style='margin-bottom:1.55pt;text-align:left;
line-height:109%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:109%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span style='font-size:
9.0pt;line-height:109%'>result </span><span style='font-size:9.0pt;line-height:
109%;color:#666666'>= </span><span style='font-size:9.0pt;line-height:109%'>b</span><span
style='font-size:9.0pt;line-height:109%;color:#4070A1'>'here comes a null! <b>\xc0\x80</b>'</span><span
style='font-size:9.0pt;line-height:109%;color:#666666'>.</span><span
style='font-size:9.0pt;line-height:109%'>decode(</span><span style='font-size:
9.0pt;line-height:109%;color:#4070A1'>'utf-8-var'</span><span style='font-size:
9.0pt;line-height:109%'>)</span></p>

<p class=MsoNormal align=left style='margin-bottom:0in;text-align:left;
line-height:110%;border:none;padding:0in'><b><span style='font-size:9.0pt;
line-height:110%;color:#C75C0A'>&gt;&gt;&gt; </span></b><b><span
style='font-size:9.0pt;line-height:110%;color:#007021'>print</span></b><span
style='font-size:9.0pt;line-height:110%'>(</span><span style='font-size:9.0pt;
line-height:110%;color:#007021'>repr</span><span style='font-size:9.0pt;
line-height:110%'>(result)</span><span style='font-size:9.0pt;line-height:110%;
color:#666666'>.</span><span style='font-size:9.0pt;line-height:110%'>lstrip(</span><span
style='font-size:9.0pt;line-height:110%;color:#4070A1'>'u'</span><span
style='font-size:9.0pt;line-height:110%'>))</span></p>

<p class=MsoNormal align=left style='margin-bottom:10.0pt;text-align:left;
line-height:110%;border:none;padding:0in'><span style='font-size:9.0pt;
line-height:110%;color:#333333'>'here comes a null! \x00'</span></p>

</div>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.65pt;
margin-left:-.25pt'>The codec does not at all enforce “correct” CESU-8. For
example, the Unicode Consortium’s not-quite-standard describing CESU-8 requires
that there is only one possible encoding of any character, so it does not allow
mixing of valid UTF-8 and CESU-8. This codec <i>does </i>allow that, just like
Python 2’s UTF-8 decoder does.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.6pt;
margin-left:-.25pt'>Characters in the Basic Multilingual Plane still have only
one encoding. This codec still enforces the rule, within the BMP, that
characters must appear in their shortest form. There is one exception: the
sequence of bytes 0xc0 0x80, instead of just 0x00, may be used to encode the
null character U+0000, like in Java.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:27.8pt;
margin-left:-.25pt'>If you encode with this codec, you get legitimate UTF-8.
Decoding with this codec and then re-encoding is not idempotent, although
encoding and then decoding is. So this module won’t produce CESU-8 for you.
Look for that functionality in the sister module, “Breaks Text For You”, coming
approximately never.</p>

<h1 style='margin-left:-.25pt'>9.4 <i>ftfy.chardata </i>and <i>ftfy.build_data</i>:
trivia about characters</h1>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.9pt;
margin-left:-.25pt'>These files load information about the character properties
in Unicode 7.0. Yes, even if your version of Python doesn’t support Unicode
7.0. This ensures that ftfy’s behavior is consistent across versions. This
gives other modules access to the gritty details about characters and the
encodings that use them.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.chardata.<b>chars_to_classes</b>(<i>string</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:25.4pt'>Convert each Unicode character to a letter indicating which
of many classes it’s in.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See build_data.py for where this
data comes from and what it means.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.chardata.<b>possible_encoding</b>(<i>text</i>,
<i>encoding</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:25.4pt'>Given text and a single-byte encoding, check whether that
text could have been decoded from that single-byte encoding.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.5pt;
margin-left:25.4pt'>In other words, check whether it can be encoded in that
encoding, possibly sloppily.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.25pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=251 height=1 id="Group 27053"
src="ftfy%20Documentation_files/image003.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:35.7pt;margin-left:0in;text-align:left;text-indent:10.85pt;
line-height:116%'><sup><span style='font-size:8.0pt;line-height:116%'>1 </span></sup><span
style='font-size:8.0pt;line-height:116%'>In a pinch, you can decode CESU-8 in
Python 2 using the UTF-8 codec: first decode the bytes (incorrectly), then
encode them, then decode them again, using UTF-8 as the codec every time.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>9.4.
<i>ftfy.chardata </i>and <i>ftfy.build_data</i>: trivia about characters </b>ftfy.build_data.<b>make_char_data_file</b>(<i>do_it_anyway=False</i>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.3pt;
margin-left:25.4pt'>Build the compressed data file ‘char_classes.dat’ and write
it to the current directory.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:25.4pt'>If you run this, run it in Python 3.5 or later, even though
that requires an alpha version at the time of writing this code. It will run in
earlier versions, but you won’t get the Unicode 7 standard, leading to
inconsistent behavior.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>To protect against this, running this in the wrong version
of Python will raise an error unless you pass do_it_anyway=True.</p>

</div>

<span style='font-size:10.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection8>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:41.95pt;margin-left:.5pt;text-align:right;line-height:110%'><b>CHAPTER
</b><b><span style='font-size:14.5pt;line-height:110%'>10</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:18.8pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 25389"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:1.3pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%'>Future versions of ftfy</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:51.3pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 25390"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>ftfy has full support for Python
2.7, even including a backport of Unicode 7 character classes to Python 2. But
given the sweeping changes to Unicode in Python, it’s getting inconvenient to
add new features to ftfy that work the same on both versions. ftfy 5.0, when it
is released, will probably only support Python 3.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.85pt;
margin-left:-.25pt'>If you want to see examples of why ftfy is particularly
difficult to maintain on two versions of Python (which is more like three
versions because of Python 2’s “wide” and “narrow” builds), take a look at
functions such as ftfy.bad_codecs.utf8_variants.mangle_surrogates() and ftfy.compatibility._narrow_unichr_workaround().</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.5pt;
margin-left:-.25pt'>We’re following the lead of venerable projects such as
jQuery. jQuery dropped support for IE 6-8 in version 2.0, and in doing so, it
became much simpler and faster for people who didn’t need to support old
versions of IE in their web applications. Meanwhile, jQuery 1.9 remained there
for those who needed it.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Similarly, ftfy 5.0 will reduce
the size and complexity of the code greatly, but ftfy 4.x will remain there. If
you’re running on Python 2, please make sure that ftfy &lt; 5 is in your
requirements list, not just ftfy.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>Chapter
10. Future versions of ftfy</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:10.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 25598"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'>Python
Module Index</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:80.3pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%'><img
border=0 width=625 height=1 id="Group 25600"
src="ftfy%20Documentation_files/image002.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>f</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:279.7pt;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.bad_codecs,
<span style='color:#355F7C'>25 </span>ftfy.bad_codecs.sloppy, <span
style='color:#355F7C'>26 </span>ftfy.bad_codecs.utf8_variants, <span
style='color:#355F7C'>27</span><br clear=all style='page-break-before:always'>
</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:279.7pt;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.badness,
<span style='color:#355F7C'>24</span><br clear=all style='page-break-before:
always'>
</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:279.7pt;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.chardata,
<span style='color:#355F7C'>27</span><br clear=all style='page-break-before:
always'>
</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:279.7pt;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'>ftfy.fixes,
<span style='color:#355F7C'>21</span><br clear=all style='page-break-before:
always'>
</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b>Python
Module Index</b></p>

</div>

<span style='font-size:10.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:black'><br clear=all style='page-break-before:auto'>
</span>

<div class=WordSection9>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>A</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:11.3pt;
margin-left:-.25pt'>apply_plan() (in module ftfy.fixes), <span
style='color:#355F7C'>23</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>C</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:10.95pt;
margin-left:-.25pt'>chars_to_classes() (in module ftfy.chardata), <span
style='color:#355F7C'>27</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>D</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:10.95pt;
margin-left:-.25pt'>decode_escapes() (in module ftfy.fixes), <span
style='color:#355F7C'>23</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>E</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:10.95pt;
margin-left:-.25pt'>explain_unicode() (in module ftfy), <span style='color:
#355F7C'>12</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>F</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.65pt;
margin-left:-.25pt'>fix_character_width() (in module ftfy.fixes), <span
style='color:#355F7C'>21 </span>fix_encoding() (in module ftfy), <span
style='color:#355F7C'>11 </span>fix_file() (in module ftfy), <span
style='color:#355F7C'>12 </span>fix_latin_ligatures() (in module ftfy.fixes), <span
style='color:#355F7C'>21 </span>fix_line_breaks() (in module ftfy.fixes), <span
style='color:#355F7C'>22 </span>fix_one_step_and_explain() (in module
ftfy.fixes), <span style='color:#355F7C'>23 </span>fix_partial_utf8_punct_in_1252()
(in module ftfy.fixes),</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:57.55pt;
margin-bottom:10.9pt;margin-left:-.75pt;text-align:left;text-indent:39.85pt;
line-height:102%'><span style='color:#355F7C'>24 </span>fix_surrogates() (in
module ftfy.fixes), <span style='color:#355F7C'>22 </span>fix_text() (in module
ftfy), <span style='color:#355F7C'>9 </span>fix_text_segment() (in module
ftfy), <span style='color:#355F7C'>11 </span>ftfy.bad_codecs (module), <span
style='color:#355F7C'>25 </span>ftfy.bad_codecs.sloppy (module), <span
style='color:#355F7C'>26 </span>ftfy.bad_codecs.utf8_variants (module), <span
style='color:#355F7C'>27</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:57.55pt;
margin-bottom:10.9pt;margin-left:-.75pt;text-align:left;text-indent:39.85pt;
line-height:102%'>ftfy.badness (module), <span style='color:#355F7C'>24 </span>ftfy.chardata
(module), <span style='color:#355F7C'>27</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:57.55pt;
margin-bottom:10.9pt;margin-left:-.75pt;text-align:left;text-indent:39.85pt;
line-height:102%'>ftfy.fixes (module), <span style='color:#355F7C'>21</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>M</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:10.95pt;
margin-left:-.25pt'>make_char_data_file() (in module ftfy.build_data), <span
style='color:#355F7C'>27</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>P</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:10.95pt;
margin-left:-.25pt'>possible_encoding() (in module ftfy.chardata), <span
style='color:#355F7C'>27</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>R</span></p>

<p class=MsoNormal style='margin-left:-.25pt'>remove_bom() (in module
ftfy.fixes), <span style='color:#355F7C'>23</span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:9.3pt;margin-left:.5pt;text-align:right;line-height:110%'><img
width=625 height=1 src="ftfy%20Documentation_files/image004.gif"><br clear=ALL>
Index</p>

<p class=MsoNormal align=left style='margin-top:83.15pt;margin-right:0in;
margin-bottom:11.2pt;margin-left:-.25pt;text-align:left;line-height:102%'>remove_control_chars()
(in module ftfy.fixes), <span style='color:#355F7C'>23 </span>remove_terminal_escapes()
(in module ftfy.fixes), <span style='color:#355F7C'>21 </span>replace_lossy_sequences()
(in module ftfy.fixes), <span style='color:#355F7C'>24 </span>restore_byte_a0()
(in module ftfy.fixes), <span style='color:#355F7C'>24</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>S</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:10.95pt;
margin-left:-.25pt'>sequence_weirdness() (in module ftfy.badness), <span
style='color:#355F7C'>24</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>T</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:10.95pt;
margin-left:-.25pt'>text_cost() (in module ftfy.badness), <span
style='color:#355F7C'>25</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%'>U</span></p>

<p class=MsoNormal style='margin-left:-.25pt'>uncurl_quotes() (in module
ftfy.fixes), <span style='color:#355F7C'>21 </span>unescape_html() (in module
ftfy.fixes), <span style='color:#355F7C'>21</span></p>

</div>

</body>

</html>
